openapi: 3.1.0
info:
  version: '5.2.0'
  title: FDX V5.2.0 Money Movement API
  description: Financial Data Exchange V5.2.0 Money Movement API
  contact:
    name: Financial Data Exchange
    url: 'https://financialdataexchange.org/'
    email: fdxsupport@financialdataexchange.org
  license:
    name: FDX API License Agreement (11-13-2019)
    url: 'https://financialdataexchange.org/common/Uploaded%20files/Policies/FDX%20API%20License%20Agreement-(11-13-2019).pdf'
servers:
  - url: 'https://api.fi.com/fdx/v5'
    description: Financial Data Exchange V5.2.0 Money Movement API
tags:
  - name: Internal Transfers
    description: Manage internal transfers
  - name: Payee Management
    description: Manage payees for payments
  - name: Payment Initiation Parties
    description: Manage payment initiation parties
  - name: Payments
    description: Manage payments
  - name: Personal Information
    description: Search and view customer or customers
  - name: Recurring Payments
    description: Manage recurring payments
paths:

  ############################################################
  #
  # Money Movement paths
  #
  ############################################################

  /payees:
    get:
      operationId: searchForPayees
      tags:
        - Payee Management
      summary: Search for payees
      description: Search for payees
      parameters:
        - $ref: '#/components/parameters/UpdatedSinceQuery'
        - $ref: '/fdxapi.components.yaml#/components/parameters/OffsetQuery'
        - $ref: '/fdxapi.components.yaml#/components/parameters/LimitQuery'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payees'
              examples:
                Retrieve Payees:
                  value:
                    page:
                      nextOffset: "next-offset-123-xyz"
                      prevOffset: "prev-offset-456-abc"
                      totalElements: 100
                    updates:
                      nextUpdateId: "next-update-id-456-krl"
                    links:
                      next:
                        href: "/payees?offset=next-offset-123-xyz"
                      prev:
                        href: "/payees?offset=prev-offset-456-abc"
                      updates:
                        href: "/payees?updatedSince=next-update-id-456-krl"
                    payees:
                      - merchant:
                          displayName: "My Cell Phone Biller"
                          name:
                            company: "US Cellular"
                          address:
                            line1: "10 Cellular way"
                            city: "New York"
                            state: "NY"
                            postalCode: "10001"
                          phone:
                            type: CELL
                            country: US
                            number: "2013329944"
                          payeeId: "payee-1001"
                          merchantAccountIds:
                            - "999900008888"
                          status: "ACTIVE"
                          expiresTimestamp: "2025-03-15T13:29:19+0000"
        '404':
          description: Data not found for request parameters
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Data not found for request parameters:
                    value:
                      code: 1107
                      message: Data not found for request parameters
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '500':
          $ref: '/fdxapi.components.yaml#/components/responses/500'
        '501':
          $ref: '/fdxapi.components.yaml#/components/responses/501'
        '503':
          $ref: '/fdxapi.components.yaml#/components/responses/503'
    post:
      operationId: createPayee
      tags:
        - Payee Management
      summary: Create a payee
      description: Create a payee
      parameters:
        - $ref: '#/components/parameters/IdempotencyKeyHeader'
      requestBody:
        content:
          application/json:
            schema:
              description: The data of the Payee to be updated
              $ref: '#/components/schemas/PayeeForUpdate'
            examples:
              Create a Payee:
                value:
                  merchant:
                    displayName: "My Cell Phone Biller"
                    name:
                      company: "US Cellular"
                    address:
                      line1: "10 Cellular way"
                      city: "New York"
                      state: "NY"
                      postalCode: "10001"
                    phone:
                      type: CELL
                      country: US
                      number: "2013329944"
                    merchantAccountIds:
                      - "999900008888"
      responses:
        '200':
          description: Payee Exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payee'
              examples:
                Existing Payee:
                  value:
                    merchant:
                      displayName: "My Cell Phone Biller"
                      name:
                        company: "US Cellular"
                      address:
                        line1: "10 Cellular way"
                        city: "New York"
                        state: "NY"
                        postalCode: "10001"
                      phone:
                        type: CELL
                        country: US
                        number: "2013329944"
                      payeeId: "payee-1001"
                      merchantAccountIds:
                        - "999900008888"
                      status: "ACTIVE"
                      expiresTimestamp: "2025-03-15T13:29:19+0000"
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payee'
              examples:
                Created Payee:
                  value:
                    merchant:
                      displayName: "My Cell Phone Biller"
                      name:
                        company: "US Cellular"
                      address:
                        line1: "10 Cellular way"
                        city: "New York"
                        state: "NY"
                        postalCode: "10001"
                      phone:
                        type: CELL
                        country: US
                        number: "2013329944"
                      payeeId: "payee-1001"
                      merchantAccountIds:
                        - "999900008888"
                      status: "ACTIVE"
                      expiresTimestamp: "2025-03-15T13:29:19+0000"
        '409':
          description: Duplicate Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payee'
              examples:
                Duplicate Request:
                  value:
                    merchant:
                      displayName: "My Cell Phone Biller"
                      name:
                        company: "US Cellular"
                      address:
                        line1: "10 Cellular way"
                        city: "New York"
                        state: "NY"
                        postalCode: "10001"
                      phone:
                        type: CELL
                        country: US
                        number: "2013329944"
                      payeeId: "payee-1001"
                      merchantAccountIds:
                        - "999900008888"
                      status: "ACTIVE"
                      expiresTimestamp: "2025-03-15T13:29:19+0000"
  /payees/{payeeId}:
    get:
      operationId: getPayee
      tags:
        - Payee Management
      summary: Get a payee
      description: Get a payee
      parameters:
        - $ref: '#/components/parameters/PayeeIdPath'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payee'
              examples:
                Retrieve Payee by Payee Id Response:
                  value:
                    merchant:
                      displayName: "My Cell Phone Biller"
                      name:
                        company: "US Cellular"
                      address:
                        line1: "10 Cellular way"
                        city: "New York"
                        state: "NY"
                        postalCode: "10001"
                      phone:
                        type: CELL
                        country: US
                        number: "2013329944"
                      payeeId: "payee-1001"
                      merchantAccountIds:
                        - "999900008888"
                      status: "ACTIVE"
                      expiresTimestamp: "2025-03-15T13:29:19+0000"
        '404':
          description: Payee with provided ID was not found
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Payee not found:
                    value:
                      code: 800
                      message: Payee not found
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '500':
          $ref: '/fdxapi.components.yaml#/components/responses/500'
        '501':
          $ref: '/fdxapi.components.yaml#/components/responses/501'
        '503':
          $ref: '/fdxapi.components.yaml#/components/responses/503'
    patch:
      operationId: updatePayee
      tags:
        - Payee Management
      summary: Update a payee
      description: >-
        Used to update an existing payee. The payee type must match the existing payee.
        This call updates the payee's fields to the values provided.
        If a field is not provided, the payee's field is not updated
      parameters:
        - $ref: '#/components/parameters/PayeeIdPath'
        - $ref: '#/components/parameters/IdempotencyKeyHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayeeForUpdate'
            examples:
              Update Display Name:
                value:
                  merchant:
                    displayName: "My Business Cell Phone Biller"
              Update Phone Number:
                value:
                  merchant:
                    phone:
                      type: CELL
                      country: US
                      number: "9085550000"
              Update Name and Address:
                value:
                  merchant:
                    name:
                      company: "My Business Cell Phone Biller"
                    address:
                      line1: "10 Cellular way"
                      city: "New York"
                      state: "NY"
                      postalCode: "10001"
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payee'
              examples:
                Successful Update:
                  value:
                    merchant:
                      displayName: "My Cell Phone Biller"
                      name:
                        company: "US Cellular"
                      address:
                        line1: "10 Cellular way"
                        city: "New York"
                        state: "NY"
                        postalCode: "10001"
                      phone:
                        type: CELL
                        country: US
                        number: "2013329944"
                      payeeId: "payee-1001"
                      merchantAccountIds:
                        - "999900008888"
                      status: "ACTIVE"
                      expiresTimestamp: "2025-03-15T13:29:19+0000"
        '400':
          description: Input sent by client does not satisfy API specification
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Invalid Input:
                    value:
                      code: 401
                      message: Invalid Input
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Payee cannot be modified or deleted:
                    value:
                      code: 801
                      message: Payee cannot be modified or deleted
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '404':
          description: Payee with provided ID was not found
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Payee not found:
                    value:
                      code: 800
                      message: Payee not found
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '409':
          description: Duplicate Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payee'
              examples:
                Duplicate Request:
                  value:
                    merchant:
                      displayName: My Cell Phone Biller
                      name:
                        company: US Cellular
                      address:
                        line1: 10 Cellular way
                        city: New York
                        state: NY
                        postalCode: '10001'
                      phone:
                        type: CELL
                        country: US
                        number: '2013329944'
                      payeeId: payee-1001
                      merchantAccountIds:
                        - '999900008888'
                      status: ACTIVE
                      expiresTimestamp: '2025-03-15T13:29:19+0000'
        '500':
          $ref: '/fdxapi.components.yaml#/components/responses/500'
        '501':
          $ref: '/fdxapi.components.yaml#/components/responses/501'
        '503':
          $ref: '/fdxapi.components.yaml#/components/responses/503'
    delete:
      operationId: deletePayee
      tags:
        - Payee Management
      summary: Delete a payee
      description: Delete a payee
      parameters:
        - $ref: '#/components/parameters/PayeeIdPath'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payee'
              examples:
                Successful Deletion:
                  value:
                    merchant:
                      status: "DELETED"
        '400':
          description: Payee cannot be modified or deleted
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Payee cannot be modified or deleted:
                    value:
                      code: 801
                      message: Payee cannot be modified or deleted
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '404':
          description: Payee with provided ID was not found
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Payee not found:
                    value:
                      code: 800
                      message: Payee not found
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '500':
          $ref: '/fdxapi.components.yaml#/components/responses/500'
        '501':
          $ref: '/fdxapi.components.yaml#/components/responses/501'
        '503':
          $ref: '/fdxapi.components.yaml#/components/responses/503'
  /payments:
    get:
      operationId: searchForPayments
      tags:
        - Payments
      summary: Search for payments
      description: Search for payments
      parameters:
        - $ref: '#/components/parameters/UpdatedSinceQuery'
        - $ref: '/fdxapi.components.yaml#/components/parameters/OffsetQuery'
        - $ref: '/fdxapi.components.yaml#/components/parameters/LimitQuery'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payments'
              examples:
                Retrieve Payments:
                  value:
                    page:
                      nextOffset: "next-offset-123-xyz"
                      prevOffset: "prev-offset-456-abc"
                      totalElements: 100
                    updates:
                      nextUpdateId: "next-update-id-456-krl"
                    links:
                      next:
                        href: "/payments?offset=next-offset-123-xyz"
                      prev:
                        href: "/payments?offset=prev-offset-456-abc"
                      updates:
                        href: "/payments?updatedSince=next-update-id-456-krl"
                    payments:
                      - fromAccountId: "ACCOUNT-123"
                        toPayeeId: "PAYEE-ABC"
                        amount: 10.99
                        merchantAccountId: "MERCHANT-ACCOUNT-ID-0001"
                        dueDate: "2021-08-17"
                        paymentId: "PAYMENT-213"
                        recurringPaymentId: "RECURRING-PAYMENT-485"
                        processedTimestamp: "2021-03-15T13:29:19+0000"
                        startedProcessingTimestamp: "2021-03-14T13:29:19+0000"
                        status: "PROCESSED"
                        links:
                          - href: "/recurring-payment/RECURRING-PAYMENT-485"
                            rel: recurringPayment
        '404':
          description: Data not found for request parameters
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Data not found for request parameters:
                    value:
                      code: 1107
                      message: Data not found for request parameters
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '500':
          $ref: '/fdxapi.components.yaml#/components/responses/500'
        '501':
          $ref: '/fdxapi.components.yaml#/components/responses/501'
        '503':
          $ref: '/fdxapi.components.yaml#/components/responses/503'
    post:
      operationId: schedulePayment
      tags:
        - Payments
      summary: Schedule payment
      description: Schedule a payment
      parameters:
        - $ref: '#/components/parameters/IdempotencyKeyHeader'
      requestBody:
        content:
          application/json:
            schema:
              description: The data of the Payment to be scheduled
              $ref: '#/components/schemas/PaymentForUpdate'
            examples:
              Schedule a Payment:
                value:
                  fromAccountId: "ACCOUNT-123"
                  toPayeeId: "PAYEE-ABC"
                  amount: 10.99
                  merchantAccountId: "MERCHANT-ACCOUNT-ID-0001"
                  dueDate: "2021-08-17"
      responses:
        '200':
          description: Duplicate Payment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
              examples:
                Duplicate Payment:
                  value:
                    fromAccountId: "ACCOUNT-123"
                    toPayeeId: "PAYEE-ABC"
                    amount: 10.99
                    merchantAccountId: "MERCHANT-ACCOUNT-ID-0001"
                    dueDate: "2021-08-17"
                    paymentId: "PAYMENT-213"
                    status: "SCHEDULED"
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
              examples:
                Successful Creation:
                  value:
                    fromAccountId: "ACCOUNT-123"
                    toPayeeId: "PAYEE-ABC"
                    amount: 10.99
                    merchantAccountId: "MERCHANT-ACCOUNT-ID-0001"
                    dueDate: "2021-08-17"
                    paymentId: "PAYMENT-213"
                    status: "SCHEDULED"
        '400':
          description: Request is invalid
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Due date too soon:
                    value:
                      code: 803
                      message: Due date too soon
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Payment rejected:
                    value:
                      code: 804
                      message: Payment rejected
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '404':
          description: Requested payment is invalid
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Payee not found:
                    value:
                      code: 800
                      message: Payee not found
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Source account not found:
                    value:
                      code: 901
                      message: Source account not found
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Source account closed:
                    value:
                      code: 902
                      message: Source account closed
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Destination account not found:
                    value:
                      code: 904
                      message: Destination account not found
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Destination account closed:
                    value:
                      code: 905
                      message: Destination account closed
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Invalid amount:
                    value:
                      code: 907
                      message: Invalid amount
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Insufficient funds:
                    value:
                      code: 910
                      message: Insufficient funds
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '409':
          description: Duplicate Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
              examples:
                Duplicate Request:
                  value:
                    fromAccountId: ACCOUNT-123
                    toPayeeId: PAYEE-ABC
                    amount: 10.99
                    merchantAccountId: MERCHANT-ACCOUNT-ID-0001
                    dueDate: '2021-08-17'
                    paymentId: PAYMENT-213
                    status: SCHEDULED
        '422':
          description: Account type not supported
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Account type not supported:
                    value:
                      code: 704
                      message: Account type not supported
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '500':
          $ref: '/fdxapi.components.yaml#/components/responses/500'
        '501':
          $ref: '/fdxapi.components.yaml#/components/responses/501'
        '503':
          $ref: '/fdxapi.components.yaml#/components/responses/503'
  /payments/{paymentId}:
    get:
      operationId: getPayment
      tags:
        - Payments
      summary: Get payment
      description: Get a payment
      parameters:
        - $ref: '#/components/parameters/PaymentIdPath'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
              examples:
                Retrieve Payment:
                  value:
                    fromAccountId: "ACCOUNT-123"
                    toPayeeId: "PAYEE-ABC"
                    amount: 10.99
                    merchantAccountId: "MERCHANT-ACCOUNT-ID-0001"
                    dueDate: "2021-08-17"
                    paymentId: "PAYMENT-213"
                    recurringPaymentId: "RECURRING-PAYMENT-485"
                    processedTimestamp: "2021-03-15T13:29:19+0000"
                    startedProcessingTimestamp: "2021-03-14T13:29:19+0000"
                    status: "PROCESSED"
                    links:
                      - href: "/recurring-payment/RECURRING-PAYMENT-854"
                        rel: recurringPayment
        '404':
          description: A payment with provided ID was not found
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Payment not found:
                    value:
                      code: 802
                      message: Payment not found
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '500':
          $ref: '/fdxapi.components.yaml#/components/responses/500'
        '501':
          $ref: '/fdxapi.components.yaml#/components/responses/501'
        '503':
          $ref: '/fdxapi.components.yaml#/components/responses/503'
    patch:
      operationId: updatePayment
      tags:
        - Payments
      summary: Update a payment
      description: Update a payment
      parameters:
        - $ref: '#/components/parameters/PaymentIdPath'
        - $ref: '#/components/parameters/IdempotencyKeyHeader'
      requestBody:
        content:
          application/json:
            schema:
              description: The data of the Payment to be updated
              $ref: '#/components/schemas/PaymentForUpdate'
            examples:
              Update Amount:
                value:
                  fromAccountId: "ACCOUNT-890"
                  amount: 5
                  dueDate: "2021-08-30"
                  toPayeeId: "PAYEE-XYZ"
              Update Payee:
                value:
                  fromAccountId: "ACCOUNT-890"
                  toPayeeId: "PAYEE-XYZ"
                  amount: 5
                  dueDate: "2021-08-30"
              Update From Account and Due Date:
                value:
                  fromAccountId: "ACCOUNT-890"
                  dueDate: "2021-08-30"
                  toPayeeId: "PAYEE-XYZ"
                  amount: 5
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
              examples:
                Successful Update:
                  value:
                    fromAccountId: "ACCOUNT-123"
                    toPayeeId: "PAYEE-ABC"
                    amount: 10.99
                    merchantAccountId: "MERCHANT-ACCOUNT-ID-0001"
                    dueDate: "2021-08-17"
                    paymentId: "PAYMENT-213"
                    recurringPaymentId: "RECURRING-PAYMENT-485"
                    processedTimestamp: "2021-03-15T13:29:19+0000"
                    startedProcessingTimestamp: "2021-03-14T13:29:19+0000"
                    status: "PROCESSED"
                    links:
                      - href: "/recurring-payment/RECURRING-PAYMENT-548"
                        rel: recurringPayment
        '400':
          description: Request is invalid
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Due date too soon:
                    value:
                      code: 803
                      message: Due date too soon
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Payment cannot be modified or cancelled:
                    value:
                      code: 805
                      message: Payment cannot be modified or cancelled
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Insufficient funds:
                    value:
                      code: 910
                      message: Insufficient funds
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '404':
          description: Requested payment change is invalid
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Payment not found:
                    value:
                      code: 802
                      message: Payment not found
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Payee not found:
                    value:
                      code: 800
                      message: Payee not found
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Source account not found:
                    value:
                      code: 901
                      message: Source account not found
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Source account closed:
                    value:
                      code: 902
                      message: Source account closed
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Destination account not found:
                    value:
                      code: 904
                      message: Destination account not found
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Destination account closed:
                    value:
                      code: 905
                      message: Destination account closed
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Invalid amount:
                    value:
                      code: 907
                      message: Invalid amount
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Insufficient funds:
                    value:
                      code: 910
                      message: Insufficient funds
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '409':
          description: Duplicate Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
              examples:
                Duplicate Request:
                  value:
                    fromAccountId: ACCOUNT-123
                    toPayeeId: PAYEE-ABC
                    amount: 10.99
                    merchantAccountId: MERCHANT-ACCOUNT-ID-0001
                    dueDate: '2021-08-17'
                    paymentId: PAYMENT-213
                    recurringPaymentId: RECURRING-PAYMENT-485
                    processedTimestamp: '2021-03-15T13:29:19+0000'
                    startedProcessingTimestamp: '2021-03-14T13:29:19+0000'
                    status: PROCESSED
                    links:
                      - href: /recurring-payment/RECURRING-PAYMENT-584
                        rel: recurringPayment
        '422':
          description: Account type not supported
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Internal server error:
                    value:
                      code: 704
                      message: Account type not supported
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '500':
          $ref: '/fdxapi.components.yaml#/components/responses/500'
        '501':
          $ref: '/fdxapi.components.yaml#/components/responses/501'
        '503':
          $ref: '/fdxapi.components.yaml#/components/responses/503'
    delete:
      operationId: cancelPayment
      tags:
        - Payments
      summary: Cancel payment
      description: Cancel a payment
      parameters:
        - $ref: '#/components/parameters/PaymentIdPath'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
              examples:
                Successful Cancel:
                  value:
                    fromAccountId: "ACCOUNT-123"
                    toPayeeId: "PAYEE-ABC"
                    amount: 10.99
                    merchantAccountId: "MERCHANT-ACCOUNT-ID-0001"
                    dueDate: "2021-08-17"
                    paymentId: "PAYMENT-213"
                    recurringPaymentId: "RECURRING-PAYMENT-485"
                    cancelledTimestamp: "2021-03-14T13:29:19+0000"
                    status: "CANCELLED"
                    links:
                      - href: "/recurring-payment/RECURRING-PAYMENT-845"
                        rel: recurringPayment
        '404':
          description: A payment with provided ID was not found
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Payment not found:
                    value:
                      code: 802
                      message: Payment not found
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '400':
          description: Payment cannot be modified or cancelled at this time. Likely due to the state that it is in
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Payment cannot be modified or cancelled:
                    value:
                      code: 805
                      message: Payment cannot be modified or cancelled
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '500':
          $ref: '/fdxapi.components.yaml#/components/responses/500'
        '501':
          $ref: '/fdxapi.components.yaml#/components/responses/501'
        '503':
          $ref: '/fdxapi.components.yaml#/components/responses/503'
  /recurring-payments:
    get:
      operationId: searchForRecurringPayments
      tags:
        - Recurring Payments
      summary: Search for recurring payments
      description: Search for recurring payments
      parameters:
        - $ref: '#/components/parameters/UpdatedSinceQuery'
        - $ref: '/fdxapi.components.yaml#/components/parameters/OffsetQuery'
        - $ref: '/fdxapi.components.yaml#/components/parameters/LimitQuery'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecurringPayments'
              examples:
                Retrieve Recurring Payments:
                  value:
                    page:
                      nextOffset: "next-offset-123-xyz"
                      prevOffset: "prev-offset-456-abc"
                      totalElements: 100
                    updates:
                      nextUpdateId: "next-update-id-456-krl"
                    links:
                      next:
                        href: "/recurring-payments?offset=next-offset-123-xyz"
                      prev:
                        href: "/recurring-payments?offset=prev-offset-456-abc"
                      updates:
                        href: "/recurring-payments?updatedSince=next-update-id-456-krl"
                    recurringPayments:
                      - frequency: "MONTHLY"
                        duration:
                          type: "NUMBEROFTIMES"
                          numberOfTimes: 12
                        fromAccountId: "ACCOUNT-123"
                        toPayeeId: "PAYEE-ABC"
                        amount: 10.99
                        merchantAccountId: "MERCHANT-ACCOUNT-ID-0001"
                        dueDate: "2021-08-17"
                        recurringPaymentId: "RECURRING-PAYMENT-485"
                        cancelledTimestamp: "2021-03-14T13:29:19+0000"
                        status: "CANCELLED"
        '404':
          description: Data not found for request parameters
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Data not found for request parameters:
                    value:
                      code: 1107
                      message: Data not found for request parameters
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '500':
          $ref: '/fdxapi.components.yaml#/components/responses/500'
        '501':
          $ref: '/fdxapi.components.yaml#/components/responses/501'
        '503':
          $ref: '/fdxapi.components.yaml#/components/responses/503'

    post:
      operationId: scheduleRecurringPayment
      tags:
        - Recurring Payments
      summary: Schedule recurring payments
      description: Schedule a recurring payment
      parameters:
        - $ref: '#/components/parameters/IdempotencyKeyHeader'
      requestBody:
        content:
          application/json:
            schema:
              description: The data of the Recurring Payment to be scheduled
              $ref: '#/components/schemas/RecurringPaymentForUpdate'
            examples:
              Create Recurring Payment:
                value:
                  frequency: "MONTHLY"
                  duration:
                    type: "NUMBEROFTIMES"
                    numberOfTimes: 12
                  fromAccountId: "ACCOUNT-123"
                  toPayeeId: "PAYEE-ABC"
                  amount: 10.99
                  merchantAccountId: "MERCHANT-ACCOUNT-ID-0001"
                  dueDate: "2021-08-17"
      responses:
        '200':
          description: Duplicate Recurring Payment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecurringPayment'
              examples:
                Duplicate Recurring Payment:
                  value:
                    frequency: "MONTHLY"
                    duration:
                      type: "NUMBEROFTIMES"
                      numberOfTimes: 12
                    fromAccountId: "ACCOUNT-123"
                    toPayeeId: "PAYEE-ABC"
                    amount: 10.99
                    merchantAccountId: "MERCHANT-ACCOUNT-ID-0001"
                    dueDate: "2021-08-17"
                    recurringPaymentId: "RECURRING-PAYMENT-485"
                    status: "SCHEDULED"
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecurringPayment'
              examples:
                Successful Creation:
                  value:
                    frequency: "MONTHLY"
                    duration:
                      type: "NUMBEROFTIMES"
                      numberOfTimes: 12
                    fromAccountId: "ACCOUNT-123"
                    toPayeeId: "PAYEE-ABC"
                    amount: 10.99
                    merchantAccountId: "MERCHANT-ACCOUNT-ID-0001"
                    dueDate: "2021-08-17"
                    recurringPaymentId: "RECURRING-PAYMENT-485"
                    status: "SCHEDULED"
        '400':
          description: Request is invalid
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Due date too soon:
                    value:
                      code: 803
                      message: Due date too soon
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Payment rejected:
                    value:
                      code: 804
                      message: Payment rejected
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Recurring payment rejected:
                    value:
                      code: 807
                      message: Recurring payment rejected
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '404':
          description: Requested payment is invalid
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Payee not found:
                    value:
                      code: 800
                      message: Payee not found
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Source account not found:
                    value:
                      code: 901
                      message: Source account not found
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Source account closed:
                    value:
                      code: 902
                      message: Source account closed
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Destination account not found:
                    value:
                      code: 904
                      message: Destination account not found
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Destination account closed:
                    value:
                      code: 905
                      message: Destination account closed
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Invalid amount:
                    value:
                      code: 907
                      message: Invalid amount
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Insufficient funds:
                    value:
                      code: 910
                      message: Insufficient funds
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '409':
          description: Duplicate Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecurringPayment'
              examples:
                Duplicate Request:
                  value:
                    frequency: MONTHLY
                    duration:
                      type: NUMBEROFTIMES
                      numberOfTimes: 12
                    fromAccountId: ACCOUNT-123
                    toPayeeId: PAYEE-ABC
                    amount: 10.99
                    merchantAccountId: MERCHANT-ACCOUNT-ID-0001
                    dueDate: '2021-08-17'
                    recurringPaymentId: RECURRING-PAYMENT-485
                    status: SCHEDULED
        '422':
          description: Account type not supported
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Account type not supported:
                    value:
                      code: 704
                      message: Account type not supported
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '500':
          $ref: '/fdxapi.components.yaml#/components/responses/500'
        '501':
          $ref: '/fdxapi.components.yaml#/components/responses/501'
        '503':
          $ref: '/fdxapi.components.yaml#/components/responses/503'
  /recurring-payments/{recurringPaymentId}:
    get:
      operationId: getRecurringPayment
      tags:
        - Recurring Payments
      summary: Get a recurring payment
      description: Get a recurring payment
      parameters:
        - $ref: '#/components/parameters/RecurringPaymentIdPath'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecurringPayment'
              examples:
                Retrieve Recurring Payment:
                  value:
                    frequency: "MONTHLY"
                    duration:
                      type: "NUMBEROFTIMES"
                      numberOfTimes: 12
                    fromAccountId: "ACCOUNT-123"
                    toPayeeId: "PAYEE-ABC"
                    amount: 10.99
                    merchantAccountId: "MERCHANT-ACCOUNT-ID-0001"
                    dueDate: "2021-08-17"
                    recurringPaymentId: "RECURRING-PAYMENT-485"
                    status: "SCHEDULED"
        '404':
          description: A recurring payment with provided ID was not found
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Recurring payment not found:
                    value:
                      code: 806
                      message: Recurring payment not found
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '500':
          $ref: '/fdxapi.components.yaml#/components/responses/500'
        '501':
          $ref: '/fdxapi.components.yaml#/components/responses/501'
        '503':
          $ref: '/fdxapi.components.yaml#/components/responses/503'
    patch:
      operationId: updateRecurringPayment
      tags:
        - Recurring Payments
      summary: Update a recurring payment
      description: Update a recurring payment
      parameters:
        - $ref: '#/components/parameters/RecurringPaymentIdPath'
        - $ref: '#/components/parameters/IdempotencyKeyHeader'
      requestBody:
        content:
          application/json:
            schema:
              description: The data of the Recurring Payment to be updated
              $ref: '#/components/schemas/RecurringPaymentForUpdate'
            examples:
              Update Duration (type and numberOfTimes is required if type is NUMBEROFTIMES):
                value:
                  frequency: "MONTHLY"
                  dueDate: "2021-08-30"
                  fromAccountId: "ACCOUNT-890"
                  toPayeeId: "PAYEE-XYZ"
                  amount: 5
                  duration:
                    type: "NUMBEROFTIMES"
                    numberOfTimes: 12
              Update Amount:
                value:
                  frequency: "MONTHLY"
                  amount: 10.99
                  dueDate: "2021-08-30"
                  fromAccountId: "ACCOUNT-890"
                  toPayeeId: "PAYEE-XYZ"
              Update Frequency and Due Date:
                value:
                  fromAccountId: "ACCOUNT-123"
                  frequency: "MONTHLY"
                  dueDate: "2021-08-17"
                  toPayeeId: "PAYEE-XYZ"
                  amount: 5
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecurringPayment'
              examples:
                Successful Update:
                  value:
                    frequency: "MONTHLY"
                    duration:
                      type: "NUMBEROFTIMES"
                      numberOfTimes: 12
                    fromAccountId: "ACCOUNT-123"
                    toPayeeId: "PAYEE-ABC"
                    amount: 10.99
                    merchantAccountId: "MERCHANT-ACCOUNT-ID-0001"
                    dueDate: "2021-08-17"
                    recurringPaymentId: "RECURRING-PAYMENT-485"
                    status: "SCHEDULED"
        '400':
          description: Request is invalid
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Due date too soon:
                    value:
                      code: 803
                      message: Due date too soon
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Recurring payment cannot be modified or cancelled:
                    value:
                      code: 808
                      message: Recurring payment cannot be modified or cancelled
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '404':
          description: Requested recurring payment change is invalid
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Recurring payment not found:
                    value:
                      code: 806
                      message: Recurring payment not found
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Payee not found:
                    value:
                      code: 800
                      message: Payee not found
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Source account not found:
                    value:
                      code: 901
                      message: Source account not found
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Source account closed:
                    value:
                      code: 902
                      message: Source account closed
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Destination account not found:
                    value:
                      code: 904
                      message: Destination account not found
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Destination account closed:
                    value:
                      code: 905
                      message: Destination account closed
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Invalid amount:
                    value:
                      code: 907
                      message: Invalid amount
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Insufficient funds:
                    value:
                      code: 910
                      message: Insufficient funds
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '409':
          description: Duplicate Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecurringPayment'
              examples:
                Duplicate Request:
                  value:
                    frequency: MONTHLY
                    duration:
                      type: NUMBEROFTIMES
                      numberOfTimes: 12
                    fromAccountId: ACCOUNT-123
                    toPayeeId: PAYEE-ABC
                    amount: 10.99
                    merchantAccountId: MERCHANT-ACCOUNT-ID-0001
                    dueDate: '2021-08-17'
                    recurringPaymentId: RECURRING-PAYMENT-485
                    status: SCHEDULED
        '422':
          description: Account type not supported
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Account type not supported:
                    value:
                      code: 704
                      message: Account type not supported
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '500':
          $ref: '/fdxapi.components.yaml#/components/responses/500'
        '501':
          $ref: '/fdxapi.components.yaml#/components/responses/501'
        '503':
          $ref: '/fdxapi.components.yaml#/components/responses/503'
    delete:
      operationId: cancelRecurringPayment
      tags:
        - Recurring Payments
      summary: Cancel a recurring payment
      description: Cancel a recurring payment
      parameters:
        - $ref: '#/components/parameters/RecurringPaymentIdPath'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecurringPayment'
              examples:
                Successful Cancel:
                  value:
                    frequency: "MONTHLY"
                    duration:
                      type: "NUMBEROFTIMES"
                      numberOfTimes: 12
                    fromAccountId: "ACCOUNT-123"
                    toPayeeId: "PAYEE-ABC"
                    amount: 10.99
                    merchantAccountId: "MERCHANT-ACCOUNT-ID-0001"
                    dueDate: "2021-08-17"
                    recurringPaymentId: "RECURRING-PAYMENT-485"
                    cancelledTimestamp: "2021-03-14T13:29:19+0000"
                    status: "CANCELLED"
        '400':
          description: Recurring payment cannot be modified or cancelled at this time. Likely due to the state that it is in
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Recurring payment cannot be modified or cancelled:
                    value:
                      code: 808
                      message: Recurring payment cannot be modified or cancelled
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '404':
          description: A recurring payment with provided ID was not found
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Recurring payment not found:
                    value:
                      code: 806
                      message: Recurring payment not found
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '500':
          $ref: '/fdxapi.components.yaml#/components/responses/500'
        '501':
          $ref: '/fdxapi.components.yaml#/components/responses/501'
        '503':
          $ref: '/fdxapi.components.yaml#/components/responses/503'
  /recurring-payments/{recurringPaymentId}/payments:
    get:
      operationId: paymentsForRecurringPayment
      tags:
        - Recurring Payments
      summary: Payments associated with the recurring payment
      description: Search for payments associated with the recurring payment
      parameters:
        - $ref: '#/components/parameters/RecurringPaymentIdPath'
        - $ref: '#/components/parameters/UpdatedSinceQuery'
        - $ref: '/fdxapi.components.yaml#/components/parameters/OffsetQuery'
        - $ref: '/fdxapi.components.yaml#/components/parameters/LimitQuery'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payments'
              examples:
                Payments Associated with Recurring Payment:
                  value:
                    page:
                      nextOffset: "next-offset-123-xyz"
                      prevOffset: "prev-offset-456-abc"
                      totalElements: 100
                    updates:
                      nextUpdateId: "next-update-id-456-krl"
                    links:
                      next:
                        href: "/recurring-payment/RECURRING-PAYMENT-485/payments?offset=next-offset-123-xyz"
                      prev:
                        href: "/recurring-payment/RECURRING-PAYMENT-485/payments?offset=prev-offset-456-abc"
                      updates:
                        href: "/recurring-payment/RECURRING-PAYMENT-485/payments?updatedSince=next-update-id-456-krl"
                    payments:
                      - fromAccountId: "ACCOUNT-123"
                        toPayeeId: "PAYEE-ABC"
                        amount: 10.99
                        merchantAccountId: "MERCHANT-ACCOUNT-ID-0001"
                        dueDate: "2021-08-17"
                        paymentId: "PAYMENT-213"
                        recurringPaymentId: "RECURRING-PAYMENT-485"
                        processedTimestamp: "2021-03-15T13:29:19+0000"
                        startedProcessingTimestamp: "2021-03-14T13:29:19+0000"
                        status: "PROCESSED"
                        links:
                          - href: "/recurring-payment/RECURRING-PAYMENT-458"
                            rel: recurringPayment
        '404':
          description: A recurring payment with provided ID was not found
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Recurring payment not found:
                    value:
                      code: 806
                      message: Recurring payment not found
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '500':
          $ref: '/fdxapi.components.yaml#/components/responses/500'
        '501':
          $ref: '/fdxapi.components.yaml#/components/responses/501'
        '503':
          $ref: '/fdxapi.components.yaml#/components/responses/503'
  /transfers:
    get:
      operationId: searchForTransfers
      tags:
        - Internal Transfers
      description: Search for transfers
      summary: Search for transfers between accounts
      parameters:
        - $ref: '#/components/parameters/UpdatedSinceQuery'
        - name: searchStartTransferDate
          in: query
          description: Start time for use in retrieval of transfers by transfer date
          schema:
            $ref: '/fdxapi.components.yaml#/components/schemas/DateString'
        - name: searchEndTransferDate
          in: query
          description: End time for use in retrieval of transfers by transfer date
          schema:
            $ref: '/fdxapi.components.yaml#/components/schemas/DateString'
        - name: searchFromAccountIds
          in: query
          description: Search for transfers by source account
          schema:
            type: array
            items:
              type: string
        - name: searchToAccountIds
          in: query
          description: Search for transfers by source account
          schema:
            type: array
            items:
              type: string
        - name: searchStatuses
          in: query
          description: Search for transfers by source account
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PaymentStatus'
        - name: searchTransferIds
          in: query
          description: Search for transfers by id
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfers'
        '400':
          description: Start or end date value is not in the ISO 8601 format
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Invalid start or end date:
                    value:
                      code: 702
                      message: Invalid start or end date
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Invalid date range:
                    value:
                      code: 703
                      message: Invalid date range
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '404':
          description: Data not found for request parameters
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Data not found for request parameters:
                    value:
                      code: 1107
                      message: Data not found for request parameters
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '500':
          $ref: '/fdxapi.components.yaml#/components/responses/500'
        '501':
          $ref: '/fdxapi.components.yaml#/components/responses/501'
        '503':
          $ref: '/fdxapi.components.yaml#/components/responses/503'
    post:
      operationId: requestAccountTransfer
      tags:
        - Internal Transfers
      description: Create a transfer between accounts
      summary: Request account transfer
      parameters:
        - $ref: '#/components/parameters/IdempotencyKeyHeader'
      requestBody:
        description: Data of the transfer request
        content:
          application/json:
            schema:
              description: Data of the transfer request
              $ref: '#/components/schemas/TransferForCreate'
            examples:
              Transfer Example:
                value:
                  transferId: "MY-TRANSFER-ID"
                  fromAccountId: "ACCOUNT-123"
                  toAccountId: "ACCOUNT-456"
                  amount: 100
                  memo: "FDX Transfer Example"
                  paymentDetails:
                    principalAmount: 75
                    interestAmount: 10
                    insuranceAmount: 5
                    escrowAmount: 5
                    pmiAmount: 5
                    feesAmount: 0
      responses:
        '200':
          description: Initial status of the requested transfer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
                examples:
                  Successful Transfer:
                    value:
                      transferId: "MY-TRANSFER-ID"
                      fromAccountId: "ACCOUNT-123"
                      toAccountId: "ACCOUNT-456"
                      amount: 100
                      memo: "FDX Transfer Example"
                      paymentDetails:
                        principalAmount: 75
                        interestAmount: 10
                        insuranceAmount: 5
                        escrowAmount: 5
                        pmiAmount: 5
                        feesAmount: 0
                      referenceId: "FI-TRANSFER-ID"
                      status: "SCHEDULED"
                      transferDate: "2021-03-14"
        '400':
          description: Source account does not have sufficient funds
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Insufficient funds:
                    value:
                      code: 910
                      message: Insufficient funds
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '404':
          description: Requested transfer is invalid
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Source account not found:
                    value:
                      code: 901
                      message: Source account not found
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Destination account not found:
                    value:
                      code: 904
                      message: Destination account not found
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Invalid amount:
                    value:
                      code: 907
                      message: Invalid amount
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Transfer not found:
                    value:
                      code: 950
                      message: Transfer not found
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '401':
          description: Account not authorized for transfer
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Source account not authorized for transfer:
                    value:
                      code: 903
                      message: Source account not authorized for transfer
                      debugMessage: Provider custom developer-level error details for troubleshooting
                  Destination account not authorized for transfer:
                    value:
                      code: 906
                      message: Destination account not authorized for transfer
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '409':
          description: Duplicate transfer request
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Duplicate transfer request:
                    value:
                      code: 908
                      message: Duplicate transfer request
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '500':
          $ref: '/fdxapi.components.yaml#/components/responses/500'
        '501':
          $ref: '/fdxapi.components.yaml#/components/responses/501'
        '503':
          $ref: '/fdxapi.components.yaml#/components/responses/503'
  /transfers/{transferId}:
    get:
      operationId: getTransfer
      tags:
        - Internal Transfers
      description: Get a transfer been accounts
      summary: Get a transfer
      parameters:
        - $ref: '#/components/parameters/TransferIdPath'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
              examples:
                Retrieved Transfer:
                  value:
                    transferId: "MY-TRANSFER-ID"
                    fromAccountId: "ACCOUNT-123"
                    toAccountId: "ACCOUNT-456"
                    amount: 100
                    memo: "FDX Transfer Example"
                    paymentDetails:
                      principalAmount: 75
                      interestAmount: 10
                      insuranceAmount: 5
                      escrowAmount: 5
                      pmiAmount: 5
                      feesAmount: 0
                    referenceId: "FI-TRANSFER-ID"
                    status: "SCHEDULED"
                    transferDate: "2021-03-14"
    delete:
      operationId: cancelTransfer
      tags:
        - Internal Transfers
      description: Cancel a transfer between accounts
      summary: Cancel transfer
      parameters:
        - $ref: '#/components/parameters/TransferIdPath'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
              examples:
                Deleted Transfer:
                  value:
                    transferId: "MY-TRANSFER-ID"
                    fromAccountId: "ACCOUNT-123"
                    toAccountId: "ACCOUNT-456"
                    amount: 100
                    memo: "FDX Transfer Example"
                    paymentDetails:
                      principalAmount: 75
                      interestAmount: 10
                      insuranceAmount: 5
                      escrowAmount: 5
                      pmiAmount: 5
                      feesAmount: 0
                    referenceId: "FI-TRANSFER-ID"
                    status: "SCHEDULED"
                    transferDate: "2021-03-14"
  /transfers/{transferId}/status:
    get:
      operationId: getTransferStatus
      tags:
        - Internal Transfers
      description: >-
        This endpoint has been deprecated in favor of the `getTransfer`
        (`GET /transfers/{transferId}`) operation. Get status of transfer between accounts
      deprecated: true
      summary: Get transfer status
      parameters:
        - $ref: '#/components/parameters/TransferIdPath'
      responses:
        '200':
          description: Current status of the requested transfer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferStatus'
              examples:
                Successful Transfer:
                  value:
                    transferId: "MY-TRANSFER-ID"
                    referenceId: "FI-TRANSFER-ID"
                    status: "SCHEDULED"
                    transferDate: "2021-03-14"
        '404':
          description: Transfer with id was not found
          content:
            application/json:
              schema:
                $ref: '/fdxapi.components.yaml#/components/schemas/Error'
                examples:
                  Transfer not found:
                    value:
                      code: 950
                      message: Transfer not found
                      debugMessage: Provider custom developer-level error details for troubleshooting
        '500':
          $ref: '/fdxapi.components.yaml#/components/responses/500'
        '501':
          $ref: '/fdxapi.components.yaml#/components/responses/501'
        '503':
          $ref: '/fdxapi.components.yaml#/components/responses/503'
  /payment-initiation-parties:
    post:
      summary: Create payment initiation party
      tags:
        - Payment Initiation Parties
      description: |
        Create a payment initiation party associated with a customer profile
      operationId: createPaymentInitiationParty
      parameters:
        - $ref: '#/components/parameters/IdempotencyKeyHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentInitiationParty'
      responses:
        '201':
          description: Created payment initiation party
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInitiationPartyCreateResponse'
        '500':
          $ref: '/fdxapi.components.yaml#/components/responses/500'
        '501':
          $ref: '/fdxapi.components.yaml#/components/responses/501'
        '503':
          $ref: '/fdxapi.components.yaml#/components/responses/503'
    get:
      summary: Collection of payment initiation parties
      tags:
        - Payment Initiation Parties
      description: |
        Retrieve the payment initiation parties associated with a customer profile
      operationId: listPaymentInitiationParties
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInitiationParties'
        '500':
          $ref: '/fdxapi.components.yaml#/components/responses/500'
        '501':
          $ref: '/fdxapi.components.yaml#/components/responses/501'
        '503':
          $ref: '/fdxapi.components.yaml#/components/responses/503'
  '/payment-initiation-parties/{paymentInitiationPartyId}':
    summary: Payment initiation party details
    get:
      summary: Retrieve payment initiation party details
      tags:
        - Payment Initiation Parties
      description: |
        Retrieve the payment initiation party details by ID.
      operationId: getPaymentInitiationParty
      parameters:
        - $ref: '#/components/parameters/PaymentInitiationPartyIdPath'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInitiationParty'
        '500':
          $ref: '/fdxapi.components.yaml#/components/responses/500'
        '501':
          $ref: '/fdxapi.components.yaml#/components/responses/501'
        '503':
          $ref: '/fdxapi.components.yaml#/components/responses/503'
    patch:
      summary: Update payment initiation party
      tags:
        - Payment Initiation Parties
      description: |
        Update the payment initiation party associated with a customer profile
      operationId: updatePaymentInitiationParty
      parameters:
        - $ref: '#/components/parameters/PaymentInitiationPartyIdPath'
        - $ref: '#/components/parameters/IdempotencyKeyHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentInitiationParty'
      responses:
        '200':
          description: OK
        '500':
          $ref: '/fdxapi.components.yaml#/components/responses/500'
        '501':
          $ref: '/fdxapi.components.yaml#/components/responses/501'
        '503':
          $ref: '/fdxapi.components.yaml#/components/responses/503'

    delete:
      summary: Remove payment initiation party
      tags:
        - Payment Initiation Parties
      description: |
        Remove the payment initiation party associated with a customer profile
      operationId: deletePaymentInitiationParty
      parameters:
        - $ref: '#/components/parameters/PaymentInitiationPartyIdPath'
      responses:
        '204':
          description: No Content
        '500':
          $ref: '/fdxapi.components.yaml#/components/responses/500'
        '501':
          $ref: '/fdxapi.components.yaml#/components/responses/501'
        '503':
          $ref: '/fdxapi.components.yaml#/components/responses/503'
  '/payment-initiation-parties/{paymentInitiationPartyId}/payment-methods':
    summary: Payment methods registered with a payment initiation party
    post:
      summary: |
        Register a payment initiation party to a payment method
      tags:
        - Payment Initiation Parties
      description: |
        Registration of a payment initiation party to a payment method
      operationId: createPaymentMethod
      parameters:
        - $ref: '#/components/parameters/PaymentInitiationPartyIdPath'
        - $ref: '#/components/parameters/IdempotencyKeyHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentInitiationPartyToPaymentMethod'
      responses:
        '201':
          description: Created payment method registration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInitiationPartyMethodCreateResponse'
        '500':
          $ref: '/fdxapi.components.yaml#/components/responses/500'
        '501':
          $ref: '/fdxapi.components.yaml#/components/responses/501'
        '503':
          $ref: '/fdxapi.components.yaml#/components/responses/503'
  '/payment-initiation-parties/{paymentInitiationPartyId}/payment-methods/{paymentMethodRegistrationId}':
    summary: Payment methods registered with a payment initiation party details
    get:
      summary: |
        Retrieve details of the payment method registered with a payment
        initiation party
      tags:
        - Payment Initiation Parties
      description: |
        Retrieve the details of a payment method registered with a payment initiation party
      operationId: getPaymentMethodRegistration
      parameters:
        - $ref: '#/components/parameters/PaymentInitiationPartyIdPath'
        - $ref: '#/components/parameters/PaymentMethodRegistrationIdPath'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInitiationPartyToPaymentMethod'
        '500':
          $ref: '/fdxapi.components.yaml#/components/responses/500'
        '501':
          $ref: '/fdxapi.components.yaml#/components/responses/501'
        '503':
          $ref: '/fdxapi.components.yaml#/components/responses/503'
    delete:
      summary: |
        Remove a payment method registration to a payment initiation party
      tags:
        - Payment Initiation Parties
      description: |
        Remove the registered payment method from a payment initiation party
      operationId: deletePaymentMethodRegistration
      parameters:
        - $ref: '#/components/parameters/PaymentInitiationPartyIdPath'
        - $ref: '#/components/parameters/PaymentMethodRegistrationIdPath'
      responses:
        '204':
          description: No Content
        '500':
          $ref: '/fdxapi.components.yaml#/components/responses/500'
        '501':
          $ref: '/fdxapi.components.yaml#/components/responses/501'
        '503':
          $ref: '/fdxapi.components.yaml#/components/responses/503'
    patch:
      summary: |
        Update the payment method registration associated with payment initiation party
      tags:
        - Payment Initiation Parties
      description: |
        Update the payment method registration associated with payment initiation party
      operationId: updatePaymentMethodRegistration
      parameters:
        - $ref: '#/components/parameters/PaymentInitiationPartyIdPath'
        - $ref: '#/components/parameters/PaymentMethodRegistrationIdPath'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentInitiationPartyToPaymentMethod'
      responses:
        '200':
          description: OK
        '500':
          $ref: '/fdxapi.components.yaml#/components/responses/500'
        '501':
          $ref: '/fdxapi.components.yaml#/components/responses/501'
        '503':
          $ref: '/fdxapi.components.yaml#/components/responses/503'

components:

  parameters:

    ############################################################
    #
    # Money Movement request parameters
    #
    ############################################################

    IdempotencyKeyHeader:
      in: header
      name: idempotency-key
      required: true
      schema:
        $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
      description: Used to de-duplicate requests

    PayeeIdPath:
      name: payeeId
      in: path
      description: Payee Identifier. Uniquely identifies a payee
      required: true
      schema:
        $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'

    PaymentIdPath:
      name: paymentId
      in: path
      description: Payment Identifier. Uniquely identifies a payment
      required: true
      schema:
        $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'

    PaymentInitiationPartyIdPath:
      name: paymentInitiationPartyId
      schema:
        $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
      required: true
      in: path
      description: This is an unique identifier of a payment initiation party

    PaymentMethodRegistrationIdPath:
      name: paymentMethodRegistrationId
      schema:
        $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
      required: true
      in: path
      description: |
        Registration identifier between a payment initiation party and a
        payment method

    RecurringPaymentIdPath:
      name: recurringPaymentId
      in: path
      description: Recurring Payment Identifier. Uniquely identifies a recurring payment
      required: true
      schema:
        $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'

    TransferIdPath:
      name: transferId
      in: path
      required: true
      description: Transfer identifier
      schema:
        type: string

    UpdatedSinceQuery:
      name: updatedSince
      in: query
      description: Return items that have been created or updated since the update id
      schema:
        type: string

  schemas:
    ############################################################
    #
    # Money Movement data entities
    #
    ############################################################

    BICFIDec2014Identifier:
      description: BIC FI Dec 2014 identifier
      type: object
      properties:
        bicFIDec2014Id:
          type: string
          description: Business identifier code of the financial institution

    Branch:
      description: Details on the Branch that is owning the destination account
      type: object
      properties:
        branchId:
          type: string
          description: Branch number
        name:
          type: string
          description: Name of the branch
        location:
          type: array
          description: Location of the branch
          items:
            $ref: '#/components/schemas/PaymentDeliveryAddress'
        financialInstitution:
          $ref: '#/components/schemas/FinancialInstitution'
          description: Financial institution associated with the branch

    DirectDeposit:
      type: object
      description: Direct deposit details
      properties:
        directDepositId:
          $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
          description: Unique identifier of the direct deposit configuration
        registrationTypeCode:
          type: string
          description: Type code of a registration for a direct deposit account

    ElectronicAddress:
      type: object
      description: Electronic address details
      properties:
        emailAddressText:
          type: string
          description: Value of the email address

    ExternalAccountIdScheme:
      description: External account identification scheme
      type: object
      properties:
        idCode:
          $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
          description: Identification code

    ExternalFinancialInstitutionIdScheme:
      description: External financial institution identification scheme
      type: object
      properties:
        idCode:
          $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
          description: Identification code

    FinancialInstitution:
      description: |
        Details of the Financial Institution that is owning the destination
        account
      type: object
      properties:
        name:
          type: string
          description: Name of the financial institution
        fiId:
          description: Financial institution identifier
          oneOf:
            - $ref: '#/components/schemas/BICFIDec2014Identifier'
            - $ref: '#/components/schemas/GenericFinancialInstitutionId'
        location:
          type: array
          description: Location of the financial institution
          items:
            $ref: '#/components/schemas/PaymentDeliveryAddress'

    GenericAccountIdentification:
      description: Generic account identifier entity
      type: object
      properties:
        accountId:
          $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
          description: Account identifier
        issuerName:
          type: string
          description: Name of the issuer
        idScheme:
          description: Identification scheme associated with the generic account
          oneOf:
            - $ref: '#/components/schemas/ExternalAccountIdScheme'
            - $ref: '#/components/schemas/ProprietaryAccountIdScheme'

    GenericFinancialInstitutionId:
      description: Generic financial institution identifier entity
      type: object
      properties:
        fiId:
          $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
          description: Financial institution identifier
        issuerName:
          type: string
          description: Issuer name
        idScheme:
          description: Identification scheme associated with the generic financial institution
          oneOf:
            - $ref: '#/components/schemas/ExternalFinancialInstitutionIdScheme'
            - $ref: '#/components/schemas/ProprietaryFinancialInstitutionIdScheme'

    GovernmentIssuedPartyIdentification:
      type: object
      description: |
        Government issued identification document that is used to uniquely
        identify a person or business
      properties:
        idNumber:
          $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
          description: Identification number
        issuedDate:
          type: string
          description: Issued date
        expiryDate:
          type: string
          description: Expiry date
        type:
          $ref: '#/components/schemas/GovernmentIssuedIdType'
          description: Type of the identification
        issuingCountryName:
          type: string
          description: Name of the issuing country

    IBAN2007Identifier:
      description: IBAN 2007 account identifier
      type: object
      properties:
        iban2007Id:
          $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
          description: Value of the account identifier

    Merchant:
      title: Merchant entity
      description: Business or person to whom bill payments can be sent for products or services
      type: object
      allOf:
        - $ref: '#/components/schemas/MerchantForUpdate'
        - type: object
          required: [status]
          properties:
            payeeId:
              $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
              description: Uniquely identifies a payee. Used within the API to reference a payee
            status:
              $ref: '#/components/schemas/PayeeStatus'
              description: Defines the Payee’s lifecycle
            expiresTimestamp:
              $ref: '/fdxapi.components.yaml#/components/schemas/Timestamp'
              description: >-
                Describes when the entity will be automatically deleted. The entity will not go into the
                "DELETED" state. If this value is null or not provided, the entity will not expire automatically

    MerchantForUpdate:
      title: Merchant For Update entity
      description: >-
        Merchant's fields to be updated. Describes the fields that can be updated by the client.
        Supported fields could be server dependent
      type: object
      properties:
        displayName:
          type: string
          description: >-
            User defined name for the payee. Used by the customer to identify the payee.
            Not used by the system to process payments
        name:
          $ref: '/fdxapi.components.yaml#/components/schemas/CustomerName'
          description: Name of the payee used to execute the payment
        address:
          $ref: '/fdxapi.components.yaml#/components/schemas/DeliveryAddress'
          description: Address of the payee used to execute the payment
        phone:
          $ref: '/fdxapi.components.yaml#/components/schemas/TelephoneNumber'
          description: Phone number of the payee used to execute the payment
        merchantAccountIds:
          type: array
          description: Account identifier(s) the customer has with the payee
          items:
            type: string

    OrganizationName:
      type: object
      description: |
        Logical grouping of name attributes that are particular to
        an Organization type of payment initiation party
      properties:
        companyName:
          type: string
          description: Name value of the organization

    PartyGroup:
      type: object
      description: |
        Entity that allows payment initiation parties to be grouped using
        specific business rules. Each payment initiation party can belong to
        many groups.
      properties:
        groupId:
          $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
          description: |
            Unique identifier of a group of payment initiation parties
        name:
          type: string
          description: |
            Associated name with the group of payment initiation parties

    Payee:
      title: Payee entity
      description: Payee to whom funds can be transferred. Can be extended to support additional types of payees
      type: object
      required: [merchant]
      properties:
        merchant:
          $ref: '#/components/schemas/Merchant'
          description: >-
            When payee is a merchant, typically a business from which goods or services are rendered,
            this field will be populated

    PayeeForUpdate:
      title: Payee For Update entity
      description: Payee's fields to be updated
      type: object
      required: [merchant]
      properties:
        merchant:
          $ref: '#/components/schemas/MerchantForUpdate'
          description: >-
            When payee is a merchant, typically a business from which goods or services are rendered,
            this field will be populated

    Payees:
      title: Payees entity
      description: A list of payees
      type: object
      allOf:
        - $ref: '#/components/schemas/SynchronizableArray'
        - type: object
          required: [payees]
          properties:
            payees:
              type: array
              items:
                $ref: '#/components/schemas/Payee'
              description: Payees retrieved by the operation

    Payment:
      title: Payment entity
      description: Represents a payment
      type: object
      allOf:
        - $ref: '#/components/schemas/PaymentForUpdate'
        - type: object
          required: [paymentId, status]
          properties:
            paymentId:
              $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
              description: Uniquely identifies a payment. Used within the API to reference a payment
            recurringPaymentId:
              $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
              description: >-
                The recurring payment that spawned this payment.
                Null if payment is not associated with a recurring payment
            scheduledTimestamp:
              $ref: '/fdxapi.components.yaml#/components/schemas/Timestamp'
              description: When the payment was scheduled
            processedTimestamp:
              $ref: '/fdxapi.components.yaml#/components/schemas/Timestamp'
              description: When the payment was processed
            failedTimestamp:
              $ref: '/fdxapi.components.yaml#/components/schemas/Timestamp'
              description: When the payment failed.
                Includes when the payment was determined to lack sufficient funds
            cancelledTimestamp:
              $ref: '/fdxapi.components.yaml#/components/schemas/Timestamp'
              description: When the payment was cancelled
            startedProcessingTimestamp:
              $ref: '/fdxapi.components.yaml#/components/schemas/Timestamp'
              description: When the payment execution started
            status:
              $ref: '#/components/schemas/PaymentStatus'
              description: Defines the status of the payment
            links:
              $ref: '/fdxapi.components.yaml#/components/schemas/HateoasLinks'
              description: Links to related payment entities

    PaymentDeliveryAddress:
      description: |
        Relationship between a any entities and a delivery address. E.g. a
        branch can have multiple addresses registered, street address,
        electronic address and so on.
      type: object
      properties:
        type:
          $ref: '/fdxapi.components.yaml#/components/schemas/DeliveryAddressType'
          description: Type of delivery address
        address:
          description: Value of the address
          oneOf:
            - $ref: '#/components/schemas/ElectronicAddress'
            - $ref: '/fdxapi.components.yaml#/components/schemas/TelephoneNumber'
            - $ref: '/fdxapi.components.yaml#/components/schemas/Address'

    PaymentForUpdate:
      title: Payment For Update entity
      description: Payment entity used for creation and update of a payment
      type: object
      required: [fromAccountId, toPayeeId, amount, dueDate]
      properties:
        fromAccountId:
          $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
          description: ID of the account used to source funds for payment
        toPayeeId:
          $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
          description: ID of the payee to receive funds for the payment
        amount:
          type: number
          minimum: 0
          description: Amount for the payment. Must be positive
        merchantAccountId:
          type: string
          description: User's account identifier with the payee
        dueDate:
          $ref: '/fdxapi.components.yaml#/components/schemas/DateString'
          description: Date that the funds are scheduled to be delivered

    PaymentGenericAccount:
      type: object
      description: Account information
      properties:
        accountNumber:
          $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
          description: Unique identifier of the account number
        accountType:
          $ref: '/fdxapi.components.yaml#/components/schemas/AccountType'
          description: Account type
        name:
          type: string
        currencyCode:
          $ref: '/fdxapi.components.yaml#/components/schemas/Iso4217Code'
          description: ISO 4217 currency code
        id:
          description: Identifier of the payment generic account
          oneOf:
            - $ref: '#/components/schemas/IBAN2007Identifier'
            - $ref: '#/components/schemas/GenericAccountIdentification'
        branch:
          $ref: '#/components/schemas/Branch'
          description: Branch details associated with this account

    PaymentInitiationParties:
      type: object
      description: Payment initiation party summaries
      allOf:
        - $ref: '/fdxapi.components.yaml#/components/schemas/PaginatedArray'
        - type: object
          properties:
            paymentInitiationParties:
              type: array
              description: Payment initiation party summaries
              items:
                $ref: '#/components/schemas/PaymentInitiationPartySummary'

    PaymentInitiationParty:
      title: Payment Initiation Party entity
      type: object
      description: |
        Party details for FI payment initiation. Each payment initiation party
        will have a separate entry per FI customer, for example we
        might have multiple payment initiation parties that represent the same
        physical person; since they are registered for separate
        customers they will have separate entries.
      allOf:
        - $ref: '/fdxapi.components.yaml#/components/schemas/Party'
        - type: object
          properties:
            partyGroup:
              type: array
              description: |
                The PartyGroups to which this initiation party belongs.
                Optional, can be omitted if party belongs to no groups.
              items:
                $ref: '#/components/schemas/PartyGroup'
            name:
              description: |
                Name entity associated with the payment initiation party.
              $ref: '#/components/schemas/PaymentInitiationPartyName'
            governmentIssuedPartyIds:
              description: |
                Government-issued identification documents that are
                used to uniquely identify this payment initiation party.
              type: array
              items:
                $ref: '#/components/schemas/GovernmentIssuedPartyIdentification'
            paymentMethods:
              type: array
              description: |
                Registrations between this payment initiation party and its payment methods.
              items:
                $ref: '#/components/schemas/PaymentInitiationPartyToPaymentMethod'
            locations:
              type: array
              description: |
                Delivery addresses associated with this payment initiation party.
              items:
                $ref: '#/components/schemas/PaymentDeliveryAddress'
            expiresTimestamp:
              $ref: '/fdxapi.components.yaml#/components/schemas/Timestamp'
              description: |
                Describes when the entity will be automatically deleted. The entity
                will not go into the "DELETED" state. If this value is null or not
                provided, the entity will not expire automatically
            status:
              description: |
                Current status of the payment initiation party entry.
              $ref: '#/components/schemas/PaymentInitiationPartyStatus'
            contactPreferences:
              type: array
              description: |
                Contact methods for this payment initiation party.
              items:
                $ref: '#/components/schemas/PaymentInitiationPartyContactMethod'

    PaymentInitiationPartyContactMethod:
      description: A contact method for a payment initiation party.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ContactPreferencesType'
          description: Type of the contact preference
        address:
          description: Address details associated with this contact preference
          oneOf:
            - $ref: '#/components/schemas/ElectronicAddress'
            - $ref: '/fdxapi.components.yaml#/components/schemas/TelephoneNumber'
            - $ref: '/fdxapi.components.yaml#/components/schemas/Address'

    PaymentInitiationPartyCreateResponse:
      type: object
      description: |
        Entity that stores FI payment initiation party details. Each payment
        initiation party  will have a separate entry per FI customer, e.g. we
        might have multiple payment initiation parties that represent the same
        physical person, never the less since they are registered for separate
        customers then they will have separate entries.
      properties:
        paymentInitiationPartyId:
          $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
          description: Unique identifier of a payment initiation party

    PaymentInitiationPartyMethodCreateResponse:
      type: object
      description: |
        Registration between a payment initiation party and a Payment Method
      properties:
        registrationId:
          $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
          description: |
            Registration identifier between a payment initiation party and a
            payment method

    PaymentInitiationPartyName:
      type: object
      description: |
        Generic entity that stores various names associated with a
        payment initiation party
      properties:
        aliasName:
          type: string
          description: Alias name
        detail:
          description: Details of the name
          oneOf:
            - $ref: '#/components/schemas/OrganizationName'
            - $ref: '/fdxapi.components.yaml#/components/schemas/IndividualName'

    PaymentInitiationPartySummary:
      type: object
      description: Summary of a payment initiation party
      properties:
        paymentInitiationPartyId:
          type: string
          description: Unique identifier of a payment initiation party
        name:
          $ref: '#/components/schemas/PaymentInitiationPartyName'
          description: Details of the name

    PaymentInitiationPartyToPaymentMethod:
      type: object
      description: |
        Registration between a payment initiation party and a payment method
      properties:
        registrationId:
          $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
          description: Registration ID
        paymentMethod:
          $ref: '#/components/schemas/PaymentMethod'
          description: Payment method details
        account:
          description: Account details
          oneOf:
            - $ref: '#/components/schemas/PaymentMethodCreditAccount'
            - $ref: '#/components/schemas/PaymentMethodDebitAccount'
        location:
          type: array
          description: Address associated with the payment method registration of a payment initiation party
          items:
            $ref: '#/components/schemas/PaymentDeliveryAddress'

    PaymentMethod:
      type: object
      description: |
        A method of payment, also known as a payment type or payment rail.
      allOf:
        - type: object
          properties:
            paymentMethodId:
              type: string
              description: Unique identifier of the payment method
            externalLocalInstrument1Code:
              type: string
              description: |
                Unique identifier code of the payment method rail as documented
                internally to the FI. This is aligned with ISO 20022 pain.001,
                transaction level
        - oneOf:
            - type: object
              properties:
                externalClearingSystemIdentification1Code:
                  type: string
                  description: |
                    Unique identifier code of the external clearing system.
                    This is aligned with ISO 20022 pacs.008 group level. It can be
                    used to send the payment rail for the payment. ISO has already
                    listed codes in the fields which indicates the payment rail like
                    “ACH” for ACH, “ACS” for EFT Payments, “LVT” for Canada LVTS,
                    “LYX” for Lynx Canada, etc.
            - type: object
              properties:
                externalClearingSystemIdentification1Proprietary:
                  type: string
                  description: |
                    For few examples where the payment rail is not part of the ISO
                    20022 scope.

    PaymentMethodCreditAccount:
      type: object
      description: |
        A payment initiation party's payment method for money movement that credits an account.
      properties:
        accountRegistrationId:
          $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
          description: |
            Unique identifier of the registration of the destination account to
            the payment method associated with a particular payment initiation
            party
        directDeposit:
          $ref: '#/components/schemas/DirectDeposit'
          description: Direct deposit details
        destinationAccount:
          $ref: '#/components/schemas/PaymentGenericAccount'
          description: Destination account details

    PaymentMethodDebitAccount:
      type: object
      description: |
        A payment initiation party's payment method for money movement that debits an account.
      properties:
        accountRegistrationId:
          $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
          description: |
            Unique identifier of the registration of the sending account to
            the payment method associated with a particular payment initiation
            party
        sendingAccount:
          $ref: '#/components/schemas/PaymentGenericAccount'
          description: Sending account details

    Payments:
      title: Payments entity
      description: A list of payments
      type: object
      allOf:
        - $ref: '#/components/schemas/SynchronizableArray'
        - type: object
          required: [payments]
          properties:
            payments:
              type: array
              items:
                $ref: '#/components/schemas/Payment'
              description: Payments retrieved by the operation

    ProprietaryAccountIdScheme:
      description: Proprietary account identification scheme, as per ISO 20022 v1.
      type: object
      properties:
        proprietaryName:
          type: string
          description: |
            This property is related to the name of the identification scheme,
            in the proprietary system, as per ISO 20022 v1.

    ProprietaryFinancialInstitutionIdScheme:
      description: Proprietary financial institution identification scheme, as per ISO 20022 v1.
      type: object
      properties:
        name:
          type: string
          description: |
            This property is related to the name of the identification scheme,
            in the proprietary system, as per ISO 20022 v1.

    RecurringPayment:
      title: Recurring Payment entity
      description: A recurring payment. Financial institution is free to adjust the payment date to
        accommodate weekends and holidays
      type: object
      allOf:
        - $ref: '#/components/schemas/RecurringPaymentForUpdate'
        - type: object
          required: [status]
          properties:
            recurringPaymentId:
              $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
              description: >-
                Uniquely identifies a recurring payment.
                Used within the API to reference a recurring payment
            scheduledTimestamp:
              $ref: '/fdxapi.components.yaml#/components/schemas/Timestamp'
              description: When the recurring payment was scheduled
            cancelledTimestamp:
              $ref: '/fdxapi.components.yaml#/components/schemas/Timestamp'
              description: When the recurring payment was cancelled
            processedTimestamp:
              $ref: '/fdxapi.components.yaml#/components/schemas/Timestamp'
              description: When the last payment executed
            failedTimestamp:
              $ref: '/fdxapi.components.yaml#/components/schemas/Timestamp'
              description: When the recurring payment failed
            status:
              $ref: '#/components/schemas/RecurringPaymentStatus'
              description: Defines the status of the recurring payment

    RecurringPayments:
      title: Recurring Payments entity
      description: A list of recurring payments
      type: object
      allOf:
        - $ref: '#/components/schemas/SynchronizableArray'
        - type: object
          required: [recurringPayments]
          properties:
            recurringPayments:
              type: array
              items:
                $ref: '#/components/schemas/RecurringPayment'
              description: Recurring payments retrieved by the operation

    RecurringPaymentDuration:
      title: Recurring Payment Duration entity
      description: Describes a payment's duration
      type: object
      required: [type]
      properties:
        type:
          $ref: '#/components/schemas/RecurringPaymentDurationType'
          description: Type of duration
        numberOfTimes:
          type: number
          description: Maximum number of times a payment is to be sent. Required if type is set to NUMBEROFTIMES

    RecurringPaymentForUpdate:
      title: Recurring Payment for Update entity
      description: Used to create or update a recurring payment.
        Financial institution is free to adjust the payment date to accommodate weekends and holidays
      type: object
      required: [frequency, fromAccountId, toPayeeId, amount, dueDate]
      properties:
        frequency:
          $ref: '#/components/schemas/RecurringPaymentFrequency'
          description: Defines how often the payment repeats
        duration:
          $ref: '#/components/schemas/RecurringPaymentDuration'
          description: Defines how long the payment repeats for
        fromAccountId:
          $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
          description: ID of the account used to source funds for payment
        toPayeeId:
          $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
          description: ID of the payee to receive funds for the payment
        amount:
          type: number
          minimum: 0
          description: Amount for the payment. Must be positive
        merchantAccountId:
          type: string
          description: User's account identifier with the payee
        dueDate:
          $ref: '/fdxapi.components.yaml#/components/schemas/DateString'
          description: Date that the funds are scheduled to be delivered

    SynchronizableArray:
      title: Synchronizable Array entity
      description: >-
        Base class for results that can be synchronized over time.
        A synchronizable array is also paginated
      type: object
      properties:
        page:
          $ref: '/fdxapi.components.yaml#/components/schemas/PageMetadata'
          description: Offset IDs for navigating result sets
        updates:
          $ref: '#/components/schemas/UpdatesMetadata'
          description: Update IDs for retrieving updates since query
        links:
          $ref: '#/components/schemas/SynchronizableArrayLinks'
          description: Resource URLs for navigating result sets

    SynchronizableArrayLinks:
      title: Synchronizable Array Links entity
      description: Resource URLs for retrieving changes, next or previous datasets
      type: object
      allOf:
        - $ref: '/fdxapi.components.yaml#/components/schemas/PageMetadataLinks'
        - type: object
          properties:
            updates:
              $ref: '/fdxapi.components.yaml#/components/schemas/HateoasLink'
              description: Resource URL for retrieving updates since last request

    Transfer:
      title: Transfer entity
      description: A single transfer of money. Refer to Transfers for a list of multiple transfers.
      type: object
      allOf:
        - $ref: '#/components/schemas/TransferForCreate'
        - type: object
          properties:
            referenceId:
              $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
              description: Long-term persistent identifier for transfer attempt
            status:
              $ref: '#/components/schemas/PaymentStatus'
              description: CANCELLED, FAILED, NOFUNDS, PROCESSED, PROCESSING, SCHEDULED
            transferTime:
              $ref: '/fdxapi.components.yaml#/components/schemas/Timestamp'
              description: Date of transfer attempt

    TransferForCreate:
      title: Transfer for Create entity
      description: Used to request a transfer
      type: object
      properties:
        transferId:
          $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
          description: >-
            Client generated, long-term persistent identity of the transfer action.
            This ID should be maintained and returned by institution
        fromAccountId:
          $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
          description: Long-term persistent identity of the source account
        toAccountId:
          $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
          description: Long-term persistent identity of the destination account
        amount:
          type: number
          description: Positive amount of money to be transferred
        memo:
          $ref: '/fdxapi.components.yaml#/components/schemas/String255'
          description: User-entered reason for transfer
        paymentDetails:
          $ref: '/fdxapi.components.yaml#/components/schemas/PaymentDetails'
          description: Payment details

    TransferStatus:
      title: Transfer Status entity
      deprecated: true
      description: The status of a transfer of money. Used only by the deprecated endpoint `/transfers/{transferId}/status`.
      type: object
      properties:
        transferId:
          $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
          description: >-
            Client generated, long-term persistent identity of the transfer action.
            This ID should be maintained and returned by institution
        referenceId:
          $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
          description: Long-term persistent identifier for transfer attempt
        status:
          $ref: '#/components/schemas/PaymentStatus'
          description: CANCELLED, FAILED, NOFUNDS, PROCESSED, PROCESSING, SCHEDULED
        transferDate:
          $ref: '/fdxapi.components.yaml#/components/schemas/DateString'
          description: Date of transfer attempt

    Transfers:
      title: Transfers entity
      description: A list of transfers
      type: object
      allOf:
        - $ref: '#/components/schemas/SynchronizableArray'
        - type: object
          required: [transfers]
          properties:
            transfers:
              type: array
              items:
                $ref: '#/components/schemas/Transfer'
              description: Transfers retrieved by the operation

    UpdatesMetadata:
      title: Updates Metadata entity
      description: Change IDs for synchronizable result sets
      type: object
      properties:
        nextUpdateId:
          $ref: '/fdxapi.components.yaml#/components/schemas/Identifier'
          example: "abc-xyz-123"
          description: Opaque identifier. Does not need to be numeric or have any specific pattern.
            Implementation specific
    ############################################################
    #
    # Money Movement data types
    #
    ############################################################

    ContactPreferencesType:
      type: string
      enum:
        - LETTER
        - EMAIL
        - PHONE
        - FAX
        - CELL

    GovernmentIssuedIdType:
      type: string
      enum:
        - PASSPORT
        - DRIVERLICENSE

    PayeeStatus:
      title: Payee Status
      description: >-
        Defines the payee lifecycle.<br/>
        * `ACTIVE`: Payee is ready to receive payments<br/>
        * `DELETED`: Payee has been deleted and will not move into any other state<br/>
        * `PENDING`: Payee is not ready to receive payments<br/>
        * `REJECTED`: Payee was found to be invalid and cannot to receive payments
      type: string
      enum:
        - ACTIVE
        - DELETED
        - PENDING
        - REJECTED

    PaymentInitiationPartyStatus:
      title: Payment Initiation Party Status
      description: >-
        Defines the payment initiation party lifecycle.
          * `PENDING`: Payment initiation party is not ready to receive payments
          * `ACTIVE`: Payment initiation party is ready to receive payments
          * `REJECTED`: Payment initiation party was found to be invalid and cannot to receive payments
          * `DELETED`: Payment initiation party has been deleted and will not move into any other state
      type: string
      enum:
        - PENDING
        - ACTIVE
        - REJECTED
        - DELETED

    PaymentStatus:
      title: Payment Status
      description: >-
        Defines the payment lifecycle<br/>
        * `CANCELLED`: Payment was cancelled by the user<br/>
        * `FAILED`: Payment failed for reasons other then “No Funds”.
        For example: fraud, invalid payee, source account was closed etc.<br/>
        * `NOFUNDS`: Payment failed because of the lack of funds<br/>
        * `PROCESSED`: The payment has been executed by the payment service provider.<br/>
        * `PROCESSING`: Payment is in the process of being executed by the payment service provider<br/>
        * `SCHEDULED`: Payment has been scheduled
      type: string
      enum:
        - CANCELLED
        - FAILED
        - NOFUNDS
        - PROCESSED
        - PROCESSING
        - SCHEDULED

    RecurringPaymentDurationType:
      title: Recurring payment duration type enum
      description: Describes if the recurring payment has an end or will occur a fixed number of times
      type: string
      enum:
        - NOEND
        - NUMBEROFTIMES

    RecurringPaymentFrequency:
      title: Recurring Payment Frequency enum
      description: >-
        Defines how often a payment is made relative to the starting day.<br/>
        * `BIWEEKLY`: Every 14 days<br/>
        * `TWICEMONTHLY`: Every 15 days<br/>
        * `WEEKLY`: Every 7 days
      type: string
      enum:
        - WEEKLY
        - BIWEEKLY
        - TWICEMONTHLY
        - MONTHLY
        - FOURWEEKS
        - BIMONTHLY
        - QUARTERLY
        - SEMIANNUALLY
        - ANNUALLY

    RecurringPaymentStatus:
      title: Recurring Payment Status
      description: >-
        Defines the recurring payment lifecycle<br/>
        * `CANCELLED`: Recurring Payment was cancelled by the user<br/>
        * `FAILED`: Recurring Payment failed. For example: fraud, invalid payee, source account was closed etc.<br/>
        * `PROCESSED`: The scheduled duration of the recurrence has completed.<br/>
        * `SCHEDULED`: Recurring Payment has been scheduled
      type: string
      enum:
        - CANCELLED
        - FAILED
        - PROCESSED
        - SCHEDULED
